# The following script is invoked on Apple OSX machines
# in the .code-workspace setting "terminal.integrated.profiles.osx"

# ANSI Terminal Colors
ALRT="\033[33;1m" # yellow
INFO="\033[34;1m" # blue
NRML="\033[0m"    # normal
BOLD="\033[1m"    # normal bold

# Check if NVM_DIR is defined (this is set by nvm on startup)
if [ -z "$NVM_DIR" ]; then
  printf "\n"
  printf "vsenv: ${ALRT}NVM does not appear to be installed${NRML}\n"
  printf "       Does your ${INFO}~/.zshrc${NRML} have ${INFO}export NVM_DIR${NRML} lines?\n"
  printf "\n"
  printf "       If you haven't installed nvm yet, please follow the instructions\n"
  printf "       on the NetCreate wiki.\n"
  printf "       If you are using 'bash' as your default shell, you can copy\n"
  printf "       these lines to your .zshrc file so nvm will also work in zsh.\n"
  return
fi

# Check if shell is opening inside a VSCODE integrated terminal
# is NVM is installed, there is a .nvmrc file and a .vscode directory?
if [ -n "$NVM_DIR" ] && [ -s "./.nvmrc" ] && [ -d "./.vscode" ]; then
  NVM_RC=$(cat ./.nvmrc)
  NODE_VERSION=$(nvm version $NVM_RC)
  NODE_LABEL="$NVM_RC"
  if [ "$NVM_RC" != "$NODE_VERSION" ]; then
    NODE_LABEL="$NODE_LABEL ($NODE_VERSION)"
  fi

  printf "\n"
  printf "vsenv: VISUAL STUDIO CODE INTEGRATED TERMINAL DETECTED\n"
  printf "       detected node version is ${INFO}$NODE_LABEL${NRML}\n"
  ARCH=$(uname -m)
  printf "       detected architecture is ${INFO}$ARCH${NRML} (can override in code-workspace)\n"

  # check if node binary is in the path
  if ! command -v node &> /dev/null; then
    printf "\n"
    printf "vsenv: ${ALRT}The node binary can not be found! That is weird!${NRML}\n"
    printf "       This is a possible incompatibility with your shell environment.\n"
    printf "       Contact your friendly neighborhood developer for help.\n"
    printf "       your shell:   $SHELL\n"
    printf "       your path:    $PATH\n"
    printf "       your nvm dir: $NVM_DIR\n"
    return
  else
    printf "\n"
    printf "vsenv: node binary found at ${INFO}$(command -v node)${NRML}\n"
  fi

  CURRENT_VERSION=$(node --version)
  if [ "$CURRENT_VERSION" != "$NODE_VERSION" ] && [ -n "$str_alias" ]; then
    printf "\n"
    printf "vsenv: ** WARNING **\n"
    printf "       This shell is using version ${INFO}$CURRENT_VERSION${NRML}, not the ${ALRT}specified ${INFO}$NODE_VERSION${NRML} in .nvmrc\n"
    printf "       Type ${ALRT}nvm use${NRML} to use .nvmrc version. You may need to run ${ALRT}npm ci${NRML} again.\n"
    printf "       If you want to use this version as default, type ${ALRT}nvm alias default $NODE_VERSION${NRML}\n"
  fi
else
  printf "\n"
  printf "vsenv: ${ALRT}Missing .nvmrc file or .vscode folder${NRML}\n"
  printf "       This script is intended to be used within a VSCODE integrated terminal opened as a Code Workspace.\n"
  printf "       The project folder should contain a .nvmrc file and a .vscode folder.\n"
fi

# for bash and zsh shells: if ./ is not in PATH, add it to end of PATH
if [[ $PATH != *":./"* ]]; then
  export PATH=$PATH:./
  printf "\n"
  printf "vsenv: adding './' to end of PATH for easier CLI execution in _ur directory!\n"
  printf "       (applies only to this shell)\n"
fi

printf "\n"
